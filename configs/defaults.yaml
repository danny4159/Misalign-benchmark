# @package _global_

# specify here default configuration
# order of defaults determines the order in which configs override each other
defaults:
  - _self_
  - data: synthRAD_MR_CT_Pelvis.yaml # TODO: 수정 ixi.yaml / synthRAD_MR_CT_Pelvis.yaml
  - model: cgan.yaml
  - callbacks: default.yaml
  - logger: tensorboard.yaml
  - trainer: default.yaml
  - paths: default.yaml
  - extras: default.yaml
  - hydra: default.yaml


  # experiment configs allow for version control of specific hyperparameters
  # e.g. best hyperparameters for given model and datamodule
  - experiment: null

  # config for hyperparameter optimization
  - hparams_search: null

  # optional local config for machine/user specific settings
  # it's optional since it doesn't need to exist and is excluded from version control
  - optional local: default.yaml

  # debugging config (enable through command line, e.g. `python train.py debug=default)
  - debug: null

# Override path defaults
paths:
  data_dir: ${paths.root_dir}/data/SynthRAD_MR_CT_Pelvis #TODO: 수정  IXI / SynthRAD_MR_CT_Pelvis

# task name, determines output directory path
task_name: "Model_${model.name}_Data_${data.name}_Misalign_X${data.misalign_x}_Y${data.misalign_y}_R${data.degree}_M${data.motion_prob}_D${data.deform_prob}"

# tags to help you identify your experiments
# you can overwrite this in experiment configs
# overwrite from command line with `python train.py tags="[first_tag, second_tag]"`
tags: train

# set False to skip model training
train: True

# evaluate on test set, using best model weights achieved during training
# lightning chooses best weights based on the metric specified in checkpoint callback
test: True

# compile model for faster training with pytorch 2.0
compile: False

# simply provide checkpoint path to resume training
ckpt_path: null

# seed for random number generators in pytorch, numpy and python.random
seed: 42